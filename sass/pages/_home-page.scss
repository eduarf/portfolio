.main {
    flex: 1;
}
.section-showcase{
    height: 100vh;
    background-image: linear-gradient(rgba(0,0,0,.7), rgba(0,0,0,.7)), url(../images/profile-med.jpeg);
    background-size: cover;
    background-position: center;
    background-attachment: fixed;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    @media only screen and (max-width: $medium-small){
        height: 65vh;
    }
    &__content{
        padding: calc(1rem + 2vw);
        height: calc(8rem + 20vmax);
        background-image: linear-gradient(rgba($stroke,.7), rgba($stroke,.7));
        display: flex;
        flex-direction: column;
        justify-content: space-around;
        align-items: flex-start;
        animation: hero 1.5s cubic-bezier(0.68, -0.6, 0.32, 1.6);
    }
}

.section-work {
    background-color: $stroke;
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    grid-template-rows: repeat(7, 6vw);
    grid-gap: 1.5rem;
    padding: 1.5rem;
    &__item{
        &--1{
            grid-row: 1 / span 2;
            grid-column: 1 / span 3;
        }
        &--2 {
            grid-row: 3 / span 2;
            grid-column: 1 / span 2;
        }
        &--3 {
            grid-row: 3 / span 3;
            grid-column: 3 / span 4;
        }
        &--4 {
            grid-row: 1 / span 2;
            grid-column: 4 / span 1;
        }
        &--5 {
            grid-row: 1 / span 2;
            grid-column: 5 / span 2;
        }
        &--6 {
            grid-row: 1 / span 3;
            grid-column: 7 / -1;
        }
        &--7 {
            grid-row: 5 / -1;
            grid-column: 1 / span 2;
        }
        &--8 {
            grid-row: 6 / -1;
            grid-column: 3 / span 2;
        }
        &--9 {
            grid-row: 4 / span 2;
            grid-column: 7 / -1;
        }
        &--10 {
            grid-row: 6 / -1;
            grid-column: 5 / -1;
        }
    }
    &__img{
        width: 100%;
        height: 100%;
        object-fit: cover;
        background-position: center;
        background-size: cover;
        display: block;
        cursor: pointer;
        transition: all .3s;
        &:hover {
            filter: contrast(120%);
            transform: scale(1.04);
        }
    }
}

.about-me {
    display: flex;
    justify-content: space-around;
    align-items: center;
    flex-wrap: wrap;
    padding: 2rem;
    background-color: $main;
    &__image-div{
        flex-basis: 45%;
        height: 80vh;
        border-radius: 1rem;
        overflow: hidden;
        @media only screen and(max-width: $medium){
            flex-basis: 90%;
            height: 60vh;
        }
        @media only screen and (max-width: $medium-small){
            height: 45vh;
        }
    }
    &__image{
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
    &__content{
        height: 100%;
        flex-basis: 50%;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: flex-start;
        padding: 0 2rem;
        @media only screen and(max-width: $medium){
            flex-basis: 90%;
            margin-top: 2rem;
            padding: 0;
        }
    }
}

.services {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    padding: 6rem 2rem;
    background-color: $main;
    &__service{
        min-height: 40vh;
        padding: 4rem;
        margin: 0 1rem 4rem;
        // flex basis ile flex grow'u beraber kullanırsak elemanlar sığmadığı zaman alt satıra geçince
        // orada boş kalan satırı doldurmasını sağlıyoruz
        // böylece ek bir media query yazmadan resposnive görünüme sahip olmuş oluyoruz...
        flex-basis: 35rem;
        flex-grow: 1;
        background-color: $highlight;
    }
    &__icon{
        height: 5rem;
        width: 5rem;
    }
}